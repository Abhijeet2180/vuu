// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
export const parser = LRParser.deserialize({
  version: 14,
  states: "#xOVQPOOO[QPOOOgQPO'#C^O[QPO'#C`Q!RQPOOO!aQPO'#CfOOQO'#Cn'#CnO!fQPO,58zO[QPO,58{O[QPO,58{O[QPO'#ChOOQO,59Q,59QOOQO1G.f1G.fOOQO1G.g1G.gO!wQPO1G.gO#`QPO,59SO[QPO'#CiO#tQPO1G.nOOQO1G.n1G.nO#|QPO,59TOOQO-E6g-E6gOOQO7+$Y7+$Y",
  stateData: "$b~O`OS~OaPO~ORUOcQOdRO~OUQXVQXWQXXQX^QXdZXeQXfQX~OUWOVWOWXOXXO~OdYO~OUWOVWOWXOXXOe[O~OUWOVWOWTiXTi^TieTifTi~OUWOVWOWXOXXOebOf`O~OeeOf`O~OUWOVWOWXOXXOe]af]a~O",
  goto: "!acPPdPddPPPPdltwPPPP}]UPRWXY`]TPRWXY`RZTQa_RdaQSPQVRQ]WQ^XQ_YRc`",
  nodeNames: "âš  ColumnExpression Column Number ParenthesizedExpression BinaryExpression Divide Times Plus Minus CallExpression Function ArgList",
  maxTerm: 22,
  skippedNodes: [0],
  repeatNodeCount: 1,
  tokenData: "$_~RaXY!WYZ!W]^!Wpq!Wxy!iyz!nz{!s{|!x|}!}}!O#S!O!P#X!P!Q#g!Q![#l!_!`#w!c!}#|#R#S#|#T#o#|~!]S`~XY!WYZ!W]^!Wpq!W~!nOd~~!sOe~~!xOV~~!}OW~~#SOf~~#XOX~~#[P!Q![#_~#dPR~!Q![#_~#lOU~~#qQR~!O!P#_!Q![#l~#|Oa~~$RSc~!Q![#|!c!}#|#R#S#|#T#o#|",
  tokenizers: [0],
  topRules: {"ColumnExpression":[0,1]},
  tokenPrec: 0
})
